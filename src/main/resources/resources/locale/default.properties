# Used when a thread fails inside a Client or a Server
#
#   Parameters:
#    - 0: Thread name
#
thread_errored={0} has errored!
# Used when a Connection times out
#
#   No parameters
#
server_timeout=The connection to the server timed out!
# Used when the arrays passed to the Packet constructor have different lengths
#
#   No parameters
#
packet_constructor=The Packet constructor requires the two arrays to have the same length!
# Used when data in a Packet/Query is corrupted/unreadable
#
#   No parameters
#
unreadable_data=Data could not be read!
# Used when an error occurs while encrypting a packet
#
#   Parameters:
#    - 0: Encryption type
#
encryption_failed={0} encryption failed!
# Used when an error occurs while decrypting a packet
#
#   Parameters:
#    - 0: Encryption type
#
decryption_failed={0} decryption failed!
# Used when an exception causes a NetworkException to be thrown
#
#   Parameters:
#    - 0: Exception class name
#    - 1: Exception message
#
caused_by=Caused by {0}: {1}
# Used when a program attempts to force a Connection's state when that functionality is prohibited
#
#   No parameters
#
disallowed_forced_state_change=Forcing state changes is not permitted on this object!
# Used when a packet is being encrypted and the encryption key is null
#
#   No parameters
#
encryption_key_null=Encryption key cannot be null!
# Used when the packet handlers encounter an issue with an unknown data type
#
#   Parameters:
#    - 0: Type containing issue (class, type abbreviation, etc.)
#    - 1: Name of type
#
missing_data_type=The {0} '{1}' does not have a DataType registered for it!
# Used when the getResponse() method is called on a Connection and no response is expected
#
#   Parameters:
#    - 0: Remote side (client/server)
#
no_response_expected=No response is expected from the {0}!
# Used the connection to the remote side times out when a response is expected
#
#   Parameters:
#    - 0: Remote side (client/server)
#
response_timed_out=The connection to the {0} timed out!
# Used when a query is malformed
#
#   Parameters:
#    - 0: Query ID
#    - 1: Query type
#
malformed_query=A query could not be read because it was malformed (ID: {0}, Type: {1})!
# Used to indicate a fatal error in a Connection (this is a generic error message, and a more specific one should be used if possible)
#
#   Parameters:
#    - 0: Connection IP
#    - 1: Connection port
#
generic_fatal_connection=A fatal error occurred in a connection on IP {0}, port {1}!
# Used when a program calls the branchConnection() method on a client-side connection
#
#   No parameters
#
branching_not_server_side=Cannot branch a client-side connection!
# Used when an error occurs while branching a connection
#
#   No parameters
#
branching_failed=An error occurred while branching a connection!